COMANDOS TERMINAL

### **Principais comandos do Terminal**

- **echo [texto desejado]**
    - Apresenta um texto no console


- **cd [caminho desejado]**
- Navega para outra pasta


- **ls**
    - Mostra os elementos presentes na pasta

- **pwd**
    - Mostra em qual path o usuário está no momento na arvore de diretórios

- **mkdir [nome da pasta desejado]**
    - Cria uma nova pasta

- **rm [nome do arquivo]**
    - Apaga um arquivo

- **rm -rf [nome da pasta]**
    - Apaga uma pasta

- **sudo [comando]**
    - Permite rodar comandos que necessitam de privilégio de super usuário

- **type nul > [nome desejado do arquivo]**
    - Cria ou atualiza um arquivo

- **cat [nome do arquivo]**
    - Captura o conteúdo de um arquivo e mostra na tela

- **less [nome do arquivo]** NAO FUNCIONA NO WINDOWS SEM EXTERNO
    - Mostra o conteúdo de um arquivo no console

- **history** ![numero do comando] 
    - Mostra o histórico de comandos


- **grep [texto desejado] [arquivo desejado]** NO WINDOWS É (Get-History | Select-String [texto desejado])
    - Filtra o conteúdo de um arquivo através do texto desejado e mostra na tela o resultado

- **copy [nome do arquivo] [nome do novo arquivo]** 
    - Copia o conteúdo de um arquivo para um novo arquivo

- **mv [nome do arquivo] [nome do novo arquivo]**
    - Move o conteúdo de arquivo para outro apagando o anterior

- **clear**
    - Limpa os textos que estão aparecendo no console

- **exit**
    - Fecha a sessão atual




Principais comandos git:

git init (para inicializar o git) 

git status (mostra o status dos arquivos, se há algum a ser commitado)

git add [nome_arquivo] (adiciona ao 2 estagio o arquivo designado)

git commit -m '[comentario do que foi atualizado no arquivo]' (salva o arquivo, algo parecido com um backup) --amend (para alterar o ultimo commit)

git log (mostra os commits feitos anteriormente) --pretty=oneline (mostra os commit resumidamente em uma linha) --stat(mostra mais informacoes sobre os commits)

git diff (mostra o que foi alterado no arquivo) [nome_do_arquivo](Optional) --name-only(mostra somente o nome do arquivo que mudou)

git reset HEAD [nome_arquivo] (tira os aquivos da area intermediária (add))

git checkout -- (volta o arquivo para o ultimo arquivo commitado)
